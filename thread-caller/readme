This class shows a technique to determine a thread caller. 
The source is http://stackoverflow.com/questions/6364849/can-i-get-the-name-of-the-class-and-method-within-which-the-current-thread-was-sp

To compile:
javac StackDumpSecurityManager.java
jar cvf StackDumpSecurityManager.jar StackDumpSecurityManager.class

Set system properties:

StackDumpSecurityManager.excludeWriteFile
StackDumpSecurityManager.includeWriteFile
StackDumpSecurityManager.excludeCreateThread
StackDumpSecurityManager.includeCreateThread


Run using the following options:

java -DStackDumpSecurityManager.logLevel=2 -DStackDumpSecurityManager.includeCreateThread=".*?ThreadCaller#c.*" -DStackDumpSecurityManager.excludeCreateThread=".*?ThreadCaller#a.*" -Djava.security.policy=grant-everything.policy -Djava.security.manager=StackDumpSecurityManager ThreadCaller 

java -DStackDumpSecurityManager.includeWriteFile=".*?output.*" -DStackDumpSecurityManager.excludeWriteFile=".*?output2.*" -Djava.security.policy=grant-everything.policy -Djava.security.manager=StackDumpSecurityManager FileWrite



where grant-everything.policy may contain:
grant {
    permission java.security.AllPermission "", "";
};



To run in jboss put the following lines in the run.bat

set JBOSS_CLASSPATH=%JBOSS_CLASSPATH%;%JBOSS_HOME%\server\default\lib\StackDumpSecurityManager.jar

set JAVA_OPTS=%JAVA_OPTS% -Djava.security.manager=StackDumpSecurityManager
rem set JAVA_OPTS=%JAVA_OPTS% -DStackDumpSecurityManager.traceElementSeparator="*+*"
rem set JAVA_OPTS=%JAVA_OPTS% -DStackDumpSecurityManager.logLevel=2
set JAVA_OPTS=%JAVA_OPTS% -DStackDumpSecurityManager.includeCreateThread=".*?lysis.*"
set JAVA_OPTS=%JAVA_OPTS% -DStackDumpSecurityManager.excludeCreateThread=".*?AbstractPollingService\$TimerListener#handleNotification.*"
set JAVA_OPTS=%JAVA_OPTS% -DStackDumpSecurityManager.includeWriteFile=.*
set JAVA_OPTS=%JAVA_OPTS% -DStackDumpSecurityManager.excludeWriteFile=".*?server/default/data.*;.*?server/default/tmp.*;.*?server/default/work.*;.*?server/default/log.*"
set JAVA_OPTS=%JAVA_OPTS% -Djava.security.policy=%JBOSS_HOME%/server/default/conf/server.policy


server.policy may contain totally permissive policy

grant {
    permission java.security.AllPermission "", "";
};

------------------------------------------------------------

The StackInterceptor.java demonstrates a usage of InheritableThreadLocal. I don't know how to use it if a source of main() is not available. 