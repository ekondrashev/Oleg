<project name="AgentAdapter" default="compile">
    
    <property environment="ENV"/> 
    <property name="basedir"        value="."/>

    <property name="source"         value="${basedir}/source" />
    <property name="test"           value="${basedir}/test" />

    <property name="build"          value="${basedir}/build" />
    <property name="build.source"   value="${build}/source" />
    <property name="build.test"     value="${build}/test" />

    <property name="run.logLevel"   value="op.test.Test"/>

    <property name="server.deploy.dir" location="c:/work/deploy/ctr/jboss-4.3.0.GA_CP06/server/default/lib/"/>
    <!-- <target name="echo">  -->
    <!--   <echo> Classpath = "${ENV.CLASSPATH}"</echo>  -->
    <!-- </target>  -->

    <path id="classpath">
        <pathelement path="${ENV.CLASSPATH}"/>
        <pathelement location="${basedir}/StackDumpSM.jar" />
        <pathelement location="${build.test}" />
    </path>

    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
    <property name="findbugs.home" value="c:/soft/java/findbugs-1.3.9/" />

    <target name="findbugs" depends="jar">
        <findbugs home="${findbugs.home}"  output="xml"  outputFile="findbugs.xml~" >
            <sourcePath path="source" />
            <class location="StackDumpSM.jar" />
            <!-- <auxClasspath path="${basedir}/lib/Regex.jar" /> -->
        </findbugs>
    </target>

    <presetdef name="myjavac">
        <javac includeantruntime="false" debug="off" >
            <include name="**/*.java"/>
        </javac>
    </presetdef>

    <target name="compile">
        <mkdir dir="${build}"/>
        <mkdir dir="${build.source}"/>
        <mkdir dir="${build.test}"/>

        <myjavac srcdir="${source}" destdir="${build.source}" />
        <myjavac srcdir="${test}" destdir="${build.test}" />
    </target>


    <target name="jar" depends="compile">
        <jar destfile="StackDumpSM.jar">
            <fileset dir="${build.source}" includes="**" />
        </jar>
    </target>

    <target name="deploy" depends="jar">
        <copy file="StackDumpSM.jar" todir="${server.deploy.dir}"/>
    </target>    


    <presetdef name="runsm">
        <java classpathref="classpath" fork="yes" failonerror="yes">
            <sysproperty key="java.security.manager" value="StackDumpSecurityManager" />
            <sysproperty key="StackDumpSM.logLevel" value="0" />
            <sysproperty key="java.security.policy" value="grant-everything.policy" />
        </java>
    </presetdef>

    <target name="run-string" depends="jar">
        <runsm classname="ThreadCaller">
            <sysproperty key="StackDumpSM.includeCreateThread" value="ThreadCaller#c" />
            <sysproperty key="StackDumpSM.excludeCreateThread" value="ThreadCaller#a" />
        </runsm>
        <runsm classname="FileWrite">
            <sysproperty key="StackDumpSM.includeReadFile" value="" />
            <sysproperty key="StackDumpSM.includeWriteFile" value="output" />
            <sysproperty key="StackDumpSM.excludeWriteFile" value="output2" />
        </runsm>
    </target>

    <target name="run-regex" depends="jar">
        <runsm classname="ThreadCaller">
            <sysproperty key="StackDumpSM.includeCreateThread" value="{.*?ThreadCaller#c.*}" />
            <sysproperty key="StackDumpSM.excludeCreateThread" value="{.*?ThreadCaller#a.*}" />
        </runsm>
        <runsm classname="FileWrite">
            <sysproperty key="StackDumpSM.includeReadFile" value="{.*}" />
            <sysproperty key="StackDumpSM.includeWriteFile" value="{.*?output.*}" />
            <sysproperty key="StackDumpSM.excludeWriteFile" value="{.*?output2.*}" />
        </runsm>
    </target>

    <target name="clean">
        <delete dir="${build}"/>
    </target>

</project>
